# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.1
    - name: Set up Python 3.11
      uses: actions/setup-python@v5.0.0
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # pip install flake8 pytest
        pip install flake8 pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Analysing the code with pylint
      run: |
        PYTHONPATH=. pylint $(git ls-files '*.py')
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        PYTHONPATH=. flake8 . --count --exit-zero --max-complexity=5 --max-line-length=100 --statistics \
                     --per-file-ignores="scrolltext/utils.py:F401 scrolltext/cli.py:C901"  # see below
        # --per-file-ignores="scrolltext/utils.py:F401"  # F401 import but never used (IS_WINDOWS)
        # --per-file-ignores="scrolltext/cli.py:C901"    # C901 _parse_args is too comples
    - name: Unittests
      run: |
        PYTHONPATH=. python tests/utils_tests.py
    #- name: Test with pytest  # maybe later?
    #  run: |
    #    pytest
    - name: Coverage
      run: |
        pip install coverage
        PYTHONPATH=. coverage run tests/utils_tests.py
        coverage report
